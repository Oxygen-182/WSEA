// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WSEA.Data.WSEA;

public partial class WSEAContext : DbContext
{
    public WSEAContext(DbContextOptions<WSEAContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Realtor> Realtors { get; set; }

    public virtual DbSet<Realty> Realties { get; set; }

    public virtual DbSet<RealtyImage> RealtyImages { get; set; }

    public virtual DbSet<RealtyType> RealtyTypes { get; set; }

    public virtual DbSet<Request> Requests { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Realtor>(entity =>
        {
            entity.HasKey(e => e.IdRealtor).HasName("PK__Realtors__318DB275EAEF5B9E");

            entity.Property(e => e.IdRealtor).HasColumnName("id_realtor");
            entity.Property(e => e.AspNetUserId)
                .IsRequired()
                .HasMaxLength(450);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
            entity.Property(e => e.Patronymic)
                .HasMaxLength(100)
                .HasColumnName("patronymic");
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(30)
                .HasColumnName("phone");
            entity.Property(e => e.Surname)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("surname");
        });

        modelBuilder.Entity<Realty>(entity =>
        {
            entity.HasKey(e => e.IdRealty).HasName("PK__Realties__EB07D997A22FAE47");

            entity.Property(e => e.IdRealty).HasColumnName("id_realty");
            entity.Property(e => e.ApartmentNumber)
                .HasMaxLength(10)
                .HasColumnName("apartment_number");
            entity.Property(e => e.BuildDone).HasColumnName("buildDone");
            entity.Property(e => e.CadastralNumber)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("cadastral_number");
            entity.Property(e => e.City)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("city");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(20, 2)")
                .HasColumnName("cost");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasColumnName("description");
            entity.Property(e => e.District)
                .HasMaxLength(200)
                .HasColumnName("district");
            entity.Property(e => e.Floor)
                .HasMaxLength(10)
                .HasColumnName("floor");
            entity.Property(e => e.House)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("house");
            entity.Property(e => e.IdRealtor).HasColumnName("id_realtor");
            entity.Property(e => e.Material)
                .HasMaxLength(250)
                .HasColumnName("material");
            entity.Property(e => e.RealtyTypeId).HasColumnName("realty_type_id");
            entity.Property(e => e.Rent).HasColumnName("rent");
            entity.Property(e => e.RoomCount).HasColumnName("room_count");
            entity.Property(e => e.SquareArea).HasColumnName("square_area");
            entity.Property(e => e.SquareObject).HasColumnName("square_object");
            entity.Property(e => e.Street)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("street");
            entity.Property(e => e.YearOfCommissioning).HasColumnName("year_of_commissioning");

            entity.HasOne(d => d.IdRealtorNavigation).WithMany(p => p.Realties)
                .HasForeignKey(d => d.IdRealtor)
                .HasConstraintName("FK__Realties__id_rea__6C190EBB");

            entity.HasOne(d => d.RealtyType).WithMany(p => p.Realties)
                .HasForeignKey(d => d.RealtyTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Realties__realty__6B24EA82");
        });

        modelBuilder.Entity<RealtyImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RealtyIm__3213E83F83B7A1F6");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdRealty).HasColumnName("id_realty");
            entity.Property(e => e.ImagePath)
                .IsRequired()
                .HasColumnName("image_path");

            entity.HasOne(d => d.IdRealtyNavigation).WithMany(p => p.RealtyImages)
                .HasForeignKey(d => d.IdRealty)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RealtyIma__id_re__6EF57B66");
        });

        modelBuilder.Entity<RealtyType>(entity =>
        {
            entity.HasKey(e => e.IdType).HasName("PK__RealtyTy__C3F091E0B10F63B6");

            entity.Property(e => e.IdType).HasColumnName("id_type");
            entity.Property(e => e.Type)
                .IsRequired()
                .HasMaxLength(250)
                .HasColumnName("type");
        });

        modelBuilder.Entity<Request>(entity =>
        {
            entity.HasKey(e => e.IdRequest).HasName("PK__Requests__7ADC39FCF8B79BE4");

            entity.Property(e => e.IdRequest).HasColumnName("id_request");
            entity.Property(e => e.Datetime)
                .HasColumnType("datetime")
                .HasColumnName("datetime");
            entity.Property(e => e.Description).HasColumnName("description");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(300)
                .HasColumnName("email");
            entity.Property(e => e.IdRealtor).HasColumnName("id_realtor");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("name");
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(30)
                .HasColumnName("phone");
            entity.Property(e => e.Status).HasColumnName("status");

            entity.HasOne(d => d.IdRealtorNavigation).WithMany(p => p.Requests)
                .HasForeignKey(d => d.IdRealtor)
                .HasConstraintName("FK__Requests__id_rea__6477ECF3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}