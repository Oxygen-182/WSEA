// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WSEA.Data.WSEA;

#nullable disable

namespace WSEA.Migrations.WSEA
{
    [DbContext(typeof(WSEAContext))]
    partial class WSEAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WSEA.Data.WSEA.Realtor", b =>
                {
                    b.Property<int>("IdRealtor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_realtor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRealtor"));

                    b.Property<string>("AspNetUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("patronymic");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("phone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("surname");

                    b.HasKey("IdRealtor")
                        .HasName("PK__Realtors__318DB275EAEF5B9E");

                    b.ToTable("Realtors");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.Realty", b =>
                {
                    b.Property<int>("IdRealty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_realty");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRealty"));

                    b.Property<string>("ApartmentNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("apartment_number");

                    b.Property<bool>("BuildDone")
                        .HasColumnType("bit")
                        .HasColumnName("buildDone");

                    b.Property<string>("CadastralNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cadastral_number");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("city");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(20, 2)")
                        .HasColumnName("cost");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("District")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("district");

                    b.Property<string>("Floor")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("floor");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("house");

                    b.Property<int?>("IdRealtor")
                        .HasColumnType("int")
                        .HasColumnName("id_realtor");

                    b.Property<string>("Material")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("material");

                    b.Property<int>("RealtyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("realty_type_id");

                    b.Property<bool>("Rent")
                        .HasColumnType("bit")
                        .HasColumnName("rent");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("int")
                        .HasColumnName("room_count");

                    b.Property<double?>("SquareArea")
                        .HasColumnType("float")
                        .HasColumnName("square_area");

                    b.Property<double?>("SquareObject")
                        .HasColumnType("float")
                        .HasColumnName("square_object");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("street");

                    b.Property<int?>("YearOfCommissioning")
                        .HasColumnType("int")
                        .HasColumnName("year_of_commissioning");

                    b.HasKey("IdRealty")
                        .HasName("PK__Realties__EB07D997A22FAE47");

                    b.HasIndex("IdRealtor");

                    b.HasIndex("RealtyTypeId");

                    b.ToTable("Realties");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.RealtyImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRealty")
                        .HasColumnType("int")
                        .HasColumnName("id_realty");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_path");

                    b.HasKey("Id")
                        .HasName("PK__RealtyIm__3213E83F83B7A1F6");

                    b.HasIndex("IdRealty");

                    b.ToTable("RealtyImages");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.RealtyType", b =>
                {
                    b.Property<int>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_type");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdType"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("type");

                    b.HasKey("IdType")
                        .HasName("PK__RealtyTy__C3F091E0B10F63B6");

                    b.ToTable("RealtyTypes");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.Request", b =>
                {
                    b.Property<int>("IdRequest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_request");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRequest"));

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime")
                        .HasColumnName("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email");

                    b.Property<int?>("IdRealtor")
                        .HasColumnType("int")
                        .HasColumnName("id_realtor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("phone");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("IdRequest")
                        .HasName("PK__Requests__7ADC39FCF8B79BE4");

                    b.HasIndex("IdRealtor");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.Realty", b =>
                {
                    b.HasOne("WSEA.Data.WSEA.Realtor", "IdRealtorNavigation")
                        .WithMany("Realties")
                        .HasForeignKey("IdRealtor")
                        .HasConstraintName("FK__Realties__id_rea__6C190EBB");

                    b.HasOne("WSEA.Data.WSEA.RealtyType", "RealtyType")
                        .WithMany("Realties")
                        .HasForeignKey("RealtyTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Realties__realty__6B24EA82");

                    b.Navigation("IdRealtorNavigation");

                    b.Navigation("RealtyType");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.RealtyImage", b =>
                {
                    b.HasOne("WSEA.Data.WSEA.Realty", "IdRealtyNavigation")
                        .WithMany("RealtyImages")
                        .HasForeignKey("IdRealty")
                        .IsRequired()
                        .HasConstraintName("FK__RealtyIma__id_re__6EF57B66");

                    b.Navigation("IdRealtyNavigation");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.Request", b =>
                {
                    b.HasOne("WSEA.Data.WSEA.Realtor", "IdRealtorNavigation")
                        .WithMany("Requests")
                        .HasForeignKey("IdRealtor")
                        .HasConstraintName("FK__Requests__id_rea__6477ECF3");

                    b.Navigation("IdRealtorNavigation");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.Realtor", b =>
                {
                    b.Navigation("Realties");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.Realty", b =>
                {
                    b.Navigation("RealtyImages");
                });

            modelBuilder.Entity("WSEA.Data.WSEA.RealtyType", b =>
                {
                    b.Navigation("Realties");
                });
#pragma warning restore 612, 618
        }
    }
}
