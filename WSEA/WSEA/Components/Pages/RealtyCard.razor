@page "/catalog/{realtyIdParameter?}"

@using WSEA.Data
@using WSEA.Data.WSEA

@inherits OwningComponentBase<WSEAService>

@if (Realty != null)
{
    <style>
        .card-img-top {
            width: 100%;
            height: 25vw;
            object-fit: cover;
        }
    </style>

    <div class="row col-12">
        <!-- Карусель -->
        <div class="col-md-6 col-lg-4 m-5">
            <div class="card my-3">

                <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
                rel="stylesheet"
                integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
                crossorigin="anonymous">

                <div id="myCarousel" class="carousel slide bg-inverse" data-bs-ride="carousel">
                    <ol class="carousel-indicators">
                        @if (Realty.RealtyImages.Count != 0)
                        {
                            @for (int i = 0; i < Realty.RealtyImages.Count; i++)
                            {
                                <li data-bs-target="#myCarousel" data-bs-slide-to="@i" class="active"></li>
                            }
                        }
                        else
                        {
                            <li data-bs-target="#myCarousel" data-bs-slide-to="0" class="active"></li>
                        }
                    </ol>
                    <div class="carousel-inner" role="listbox">
                        @if (Realty.RealtyImages.Count != 0)
                        {
                            @for (int i = 0; i < Realty.RealtyImages.Count; i++)
                            {
                                if (i == 0)
                                {
                                    <div class="carousel-item active">
                                        <img class="d-block w-100 card-img-top" src="@Realty.RealtyImages.ToList()[i].ImagePath" alt="Первый слайд">
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img class="d-block w-100 card-img-top" src="@Realty.RealtyImages.ToList()[i].ImagePath" alt="Первый слайд">
                                    </div>
                                }
                            }
                        }
                        else
                        {
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="/images/non_image.jpg" alt="Первый слайд">
                            </div>
                        }
                    </div>
                    <a class="carousel-control-prev" href="#myCarousel" role="button" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Предыдущий</span>
                    </a>
                    <a class="carousel-control-next" href="#myCarousel" role="button" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Следующий</span>
                    </a>
                </div>
                <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
                integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
                crossorigin="anonymous"></script>
                <div class="card-body text-center">
                    <h3 class="card-title">@Realty.City</h3>
                    <p class="card-text">@Realty.Description</p>
                </div>
            </div>
        </div>
        <!-- Конец карусели -->

        <div class="col-md-6 col-lg-4 m-5">
            <div class="card">
                <div class="card-header">
                    Информация об объекте
                </div>
                <div class="card-body">
                    <h5 class="card-title">Местонахождение</h5>
                    <p class="card-text">Объект находится по адресу: @GetRealtyAddress()</p>
                </div>
                <div class="card-body">
                    <h5 class="card-title">Описание</h5>
                    <p class="card-text">
                        Площадь объекта: @Realty.SquareObject м<small><sup>2</sup></small>
                        <br />Площадь прилегающей территории: @Realty.SquareArea м<small><sup>2</sup></small></p>
                </div>
                <div class="card-body">
                    <h5 class="card-title">Подробная информация</h5>
                    <p class="card-text">
                        Материал: @Realty.Material<br />
                        Количество комнат: @Realty.RoomCount<br />
                        Количество этажей: @Realty.Floor<br />
                        Год ввода в эксплуатацию: @Realty.YearOfCommissioning<br />
                        Введен в эксплуатацию: @BuildDoneString<br />
                        Сдается в аренду: @RentString<br />
                        Кадастровый номер: @Realty.CadastralNumber<br />
                    </p>
                    <p class="card-text"><b>Цена: @Realty.Cost₽</b></p>
                    <a href="#" class="btn btn-primary">Оформить заявку</a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div>
        Ничего не найдено!
    </div>
}

@code {
    [Parameter]
    public string? realtyIdParameter { get; set; }

    private Realty? Realty { get; set; }
    private string BuildDoneString = "Нет";
    private string RentString = "Нет";

    private string GetRealtyAddress()
    {
        string result = string.Empty;
        if (Realty.District != null)
            result = $"г. {Realty.City}, р-он {Realty.District}, ул. {Realty.Street}, д. {Realty.House}, кв. {Realty.ApartmentNumber}";
        else
            result = $"г. {Realty.City}, ул. {Realty.Street}, д. {Realty.House}, кв. {Realty.ApartmentNumber}";

        return result;
    }

    protected override void OnParametersSet()
    {
        realtyIdParameter = realtyIdParameter ?? null;
    }

    protected override async Task OnInitializedAsync()
    {
        Realty = await Service.GetRealtyAsync(int.Parse(realtyIdParameter));

        try
        {
            if (Realty.BuildDone)
                BuildDoneString = "Да";
            if (Realty.Rent)
                RentString = "Да";
        }
        catch { }
    }
}
